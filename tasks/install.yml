---
- name: git clone source repo
  git:
    repo: https://github.com/pmacct/pmacct.git
    dest: "{{ source_dir }}/pmacct-{{ pmacct_version }}"
    version: "v{{ pmacct_version }}"

- name: 'compilation: check configure script stat'
  stat:
    path: "{{ source_dir }}/pmacct-{{ pmacct_version }}/configure"
  register: configure_script

- name: 'compilation: autogen'
  command: './autogen.sh'
  args:
    chdir: "{{ source_dir }}/pmacct-{{ pmacct_version }}"
  when: not configure_script.stat.exists

- name: 'compilation: check config.log path stat'
  stat:
    path: "{{ source_dir }}/pmacct-{{ pmacct_version }}/config.log"
  register: config_log

- name: 'compilation: mark recompile on first execution'
  set_fact:
    force_recompile: true
  when: not config_log.stat.exists

- name: 'compilation: verify last configure success using config.log'
  lineinfile:
    path: "{{ source_dir }}/pmacct-{{ pmacct_version }}/config.log"
    firstmatch: yes
    regexp: 'configure: exit'
    line: 'configure: exit 0'
    state: present
  check_mode: yes
  ignore_errors: yes
  when: config_log.stat.exists
  notify: 'compilation: mark recompile'

- name: run handlers
  meta: flush_handlers

- name: 'compilation: verify params used in last configure using config.log'
  lineinfile:
    path: "{{ source_dir }}/pmacct-{{ pmacct_version }}/config.log"
    firstmatch: yes
    regexp: '^(\s*)\$ ./configure'
    backrefs: yes
    line: "\\1$ ./configure {{ config_params }}"
    state: present
  check_mode: yes
  ignore_errors: yes
  when: config_log.stat.exists and not force_recompile|bool
  notify: 'compilation: mark recompile'

- name: run handlers
  meta: flush_handlers

- name: 'compilation: configure, compile and install'
  command: "{{ item }}"
  args:
    chdir: "{{ source_dir }}/pmacct-{{ pmacct_version }}"
  loop:
    - "./configure {{ config_params }}"
    - "make -j{{ make_jobs }} {{ make_args }}"
    - "make -j{{ make_jobs }} install"
  when: force_recompile|bool

- name: create service definitions
  template:
    src: service.j2
    dest: "/etc/systemd/system/{{ item }}.service"
    group: root
    owner: root
    mode: 0640
  loop:
    - pmacctd
    - nfacctd
    - pmbgpd
    - pmbmpd
    - pmtelemetryd
    - sfacctd
  notify: systemd daemon reload
